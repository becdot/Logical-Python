         25887538 function calls (25841482 primitive calls) in 17.924 seconds

   Ordered by: call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 12253168    4.209    0.000    4.209    0.000 bit.py:52(nand)
  6828394    2.768    0.000    5.092    0.000 bit.py:35(__invert__)
  2063236    2.648    0.000    6.357    0.000 bit.py:39(__or__)
  1679438    1.205    0.000    2.367    0.000 bit.py:30(__and__)
   505910    0.104    0.000    0.104    0.000 multi.py:19(__iter__)
   411979    2.107    0.000    8.413    0.000 sequential.py:19(__call__)
   411972    1.247    0.000   11.144    0.000 sequential.py:36(__call__)
   411316    1.075    0.000    3.847    0.000 bit.py:56(mux)
   218824    0.318    0.000   14.572    0.000 sequential.py:73(<genexpr>)
   218178    0.156    0.000    2.026    0.000 multi.py:62(<genexpr>)
   205982    0.564    0.000   11.874    0.000 sequential.py:47(__call__)
   205972    0.405    0.000   14.256    0.000 sequential.py:60(__call__)
137700/102855    0.042    0.000    0.058    0.000 {len}
    48017    0.024    0.000    0.031    0.000 multi.py:13(__len__)
    45015    0.288    0.000   16.954    0.000 multi.py:9(__init__)
    27530    0.125    0.000    0.178    0.000 {zip}
    20883    0.007    0.000    0.007    0.000 multi.py:29(__getitem__)
    18758    0.008    0.000    0.008    0.000 sequential.py:16(__init__)
    18757    0.080    0.000    0.088    0.000 sequential.py:34(__init__)
    12976    0.013    0.000    0.078    0.000 multi.py:106(pad_multi)
    12872    0.033    0.000   14.859    0.001 sequential.py:72(__call__)
    12834    0.038    0.000    2.212    0.000 multi.py:59(multimux)
    12768    0.029    0.000    0.079    0.000 bit.py:60(dmux)
    10977    0.011    0.000    0.017    0.000 multi.py:43(<genexpr>)
    10944    0.008    0.000    0.008    0.000 {math.log}
    10050    0.006    0.000    0.006    0.000 bit.py:23(__mul__)
     9378    0.034    0.000    0.123    0.000 sequential.py:44(__init__)
     9377    0.022    0.000    0.144    0.000 sequential.py:57(__init__)
7296/1824    0.066    0.000    2.274    0.001 multi.py:74(reduce_winner)
7296/1824    0.045    0.000    0.137    0.000 multi.py:92(expand_winner)
     4498    0.006    0.000    0.006    0.000 bit.py:12(__init__)
     4498    0.004    0.000    0.004    0.000 bit.py:7(__new__)
     3536    0.003    0.000    0.005    0.000 multi.py:17(<genexpr>)
     3328    0.002    0.000    0.002    0.000 bit.py:17(__repr__)
     2713    0.004    0.000    0.004    0.000 {range}
     2662    0.011    0.000    0.031    0.000 bit.py:43(__xor__)
     2002    0.004    0.000    0.035    0.000 ALU.py:6(half_adder)
     1824    0.004    0.000    0.143    0.000 multi.py:87(dmux_multiway)
     1824    0.021    0.000    2.321    0.001 multi.py:68(multimux_multiway)
     1666    0.002    0.000    0.004    0.000 multi.py:130(<genexpr>)
     1604    0.058    0.000   17.170    0.011 sequential.py:97(__call__)
      927    0.004    0.000    0.026    0.000 multi.py:36(to_decimel)
      927    0.003    0.000    0.019    0.000 {sum}
      839    0.000    0.000    0.000    0.000 bit.py:20(__int__)
      829    0.001    0.000    0.001    0.000 {method 'insert' of 'list' objects}
      660    0.013    0.000    0.080    0.000 ALU.py:12(full_adder)
      586    0.015    0.000    0.160    0.000 sequential.py:70(__init__)
      563    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
      419    0.001    0.000    0.002    0.000 test_sequential.py:12(<genexpr>)
      374    0.000    0.000    0.000    0.000 sequential.py:146(<genexpr>)
   220/44    0.015    0.000   17.285    0.393 sequential.py:86(__call__)
      217    0.000    0.000    0.000    0.000 {getattr}
      210    0.002    0.000    0.007    0.000 {method 'join' of 'str' objects}
      208    0.000    0.000    0.007    0.000 multi.py:16(__str__)
      113    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      108    0.000    0.000    0.000    0.000 {isinstance}
      104    0.000    0.000    0.000    0.000 case.py:473(_getAssertEqualityFunc)
      104    0.000    0.000    0.001    0.000 case.py:506(assertEqual)
      104    0.000    0.000    0.000    0.000 case.py:499(_baseAssertEqual)
      104    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       98    0.001    0.000    0.040    0.000 multi.py:125(pad_to_digits)
       98    0.000    0.000    0.000    0.000 loader.py:134(isTestMethod)
       88    0.000    0.000    0.000    0.000 {min}
     83/3    0.001    0.000    0.161    0.054 sequential.py:81(__init__)
       76    0.000    0.000    0.006    0.000 multi.py:23(__eq__)
       76    0.000    0.000    0.000    0.000 {max}
       54    0.000    0.000    0.000    0.000 {bin}
       54    0.000    0.000    0.000    0.000 case.py:206(addTypeEqualityFunc)
       54    0.001    0.000    0.028    0.001 test_sequential.py:8(from_num)
       54    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
       54    0.000    0.000    0.000    0.000 multi.py:32(insert)
       46    0.000    0.000    0.001    0.000 collections.py:277(<genexpr>)
       45    0.000    0.000    0.000    0.000 bit.py:26(__nonzero__)
       38    0.001    0.000    0.001    0.000 {method 'isalnum' of 'str' objects}
       26    0.000    0.000    0.000    0.000 runner.py:17(__getattr__)
       25    0.000    0.000    0.000    0.000 case.py:410(assertFalse)
       25    0.000    0.000    0.000    0.000 sre_parse.py:182(__next)
       24    0.000    0.000    0.000    0.000 sre_parse.py:130(__getitem__)
       22    0.000    0.000    0.144    0.007 sequential.py:138(__call__)
       22    0.000    0.000    0.101    0.005 ALU.py:36(inc)
       22    0.000    0.000    0.000    0.000 sre_parse.py:201(get)
       22    0.003    0.000    0.086    0.004 ALU.py:22(add_multi)
       20    0.000    0.000    0.000    0.000 case.py:416(assertTrue)
       20    0.000    0.000    0.000    0.000 {hasattr}
       17    0.000    0.000    0.000    0.000 test_sequential.py:29(<genexpr>)
       17    0.000    0.000    0.000    0.000 sequential.py:137(<genexpr>)
       17    0.000    0.000    0.000    0.000 test_sequential.py:28(<genexpr>)
       17    0.000    0.000    0.000    0.000 test_sequential.py:25(<genexpr>)
       17    0.001    0.000    0.001    0.000 {method 'write' of 'file' objects}
       17    0.000    0.000    0.000    0.000 test_sequential.py:26(<genexpr>)
       17    0.000    0.000    0.000    0.000 test_sequential.py:27(<genexpr>)
       16    0.000    0.000    0.000    0.000 sre_parse.py:126(__len__)
       15    0.000    0.000    0.000    0.000 test_sequential.py:57(<genexpr>)
       15    0.000    0.000    0.000    0.000 test_sequential.py:51(<genexpr>)
       15    0.000    0.000    0.000    0.000 test_sequential.py:55(<genexpr>)
       13    0.000    0.000    0.000    0.000 test_sequential.py:56(<genexpr>)
       13    0.000    0.000    0.000    0.000 test_sequential.py:54(<genexpr>)
       13    0.000    0.000    0.000    0.000 test_sequential.py:50(<genexpr>)
    13/12    0.000    0.000    0.000    0.000 {iter}
       11    0.000    0.000    0.000    0.000 suite.py:157(_get_previous_module)
       11    0.000    0.000    0.000    0.000 result.py:65(_setupStdout)
       11    0.000    0.000    0.000    0.000 result.py:84(_restoreStdout)
       10    0.000    0.000    0.000    0.000 suite.py:46(addTest)
       10    0.000    0.000    0.000    0.000 test_sequential.py:53(<genexpr>)
       10    0.000    0.000    0.000    0.000 sre_parse.py:138(append)
       10    0.000    0.000    0.000    0.000 test_sequential.py:49(<genexpr>)
       10    0.000    0.000    0.000    0.000 suite.py:225(_tearDownPreviousClass)
     10/6    0.000    0.000    0.000    0.000 sre_parse.py:140(getwidth)
       10    0.000    0.000    0.000    0.000 test_sequential.py:52(<genexpr>)
       10    0.000    0.000    0.000    0.000 test_sequential.py:42(<genexpr>)
       10    0.000    0.000    0.000    0.000 suite.py:290(_isnotsuite)
        9    0.000    0.000    0.000    0.000 suite.py:165(_handleModuleFixture)
        9    0.000    0.000   17.886    1.987 case.py:390(__call__)
        9    0.000    0.000    0.000    0.000 functools.py:84(__init__)
        9    0.000    0.000    0.000    0.000 suite.py:125(_handleClassSetUp)
        9    0.000    0.000    0.000    0.000 case.py:180(__init__)
        9    0.000    0.000    0.000    0.000 result.py:79(stopTest)
        9    0.000    0.000    0.000    0.000 {setattr}
        9    0.000    0.000    0.000    0.000 case.py:229(setUp)
        9    0.000    0.000    0.001    0.000 runner.py:57(addSuccess)
        9    0.023    0.003   17.886    1.987 case.py:293(run)
        9    0.000    0.000    0.000    0.000 case.py:374(doCleanups)
        9    0.000    0.000    0.000    0.000 runner.py:50(startTest)
        9    0.000    0.000    0.000    0.000 {_sre.getlower}
        9    0.000    0.000    0.000    0.000 sre_parse.py:195(match)
        9    0.000    0.000    0.000    0.000 result.py:59(startTest)
        9    0.000    0.000    0.000    0.000 result.py:126(addSuccess)
        9    0.000    0.000    0.000    0.000 {method 'flush' of 'file' objects}
        9    0.000    0.000    0.000    0.000 case.py:233(tearDown)
        8    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        8    0.000    0.000    0.000    0.000 {cmp}
        8    0.000    0.000    0.001    0.000 {all}
        8    0.000    0.000    0.000    0.000 collections.py:294(<genexpr>)
        8    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        8    0.000    0.000    0.000    0.000 functools.py:86(__lt__)
        7    0.000    0.000    0.000    0.000 case.py:605(_deprecate)
        7    0.000    0.000    0.000    0.000 {ord}
        6    0.000    0.000    0.000    0.000 sre_compile.py:51(fixup)
        6    0.000    0.000    0.000    0.000 sre_parse.py:90(__init__)
      6/2    0.000    0.000    0.000    0.000 sre_compile.py:32(_compile)
        6    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        4    0.000    0.000    0.000    0.000 sre_parse.py:134(__setitem__)
        4    0.000    0.000    0.000    0.000 runner.py:22(writeln)
        4    0.000    0.000    0.000    0.000 {map}
        4    0.000    0.000    0.000    0.000 sre_compile.py:178(_compile_charset)
        4    0.000    0.000    0.000    0.000 sre_compile.py:207(_optimize_charset)
        4    0.000    0.000    0.000    0.000 sre_compile.py:474(isstring)
        4    0.000    0.000    0.000    0.000 sre_compile.py:354(_simple)
        4    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        4    0.000    0.000    0.000    0.000 sre_parse.py:257(_escape)
        4    0.000    0.000    0.000    0.000 suite.py:11(_call_if_exists)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
        3    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        3    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
        3    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        3    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 suite.py:37(__iter__)
        3    0.000    0.000    0.000    0.000 {issubclass}
        2    0.000    0.000    0.000    0.000 runner.py:111(printErrorList)
        2    0.000    0.000    0.000    0.000 suite.py:19(__init__)
        2    0.000    0.000    0.000    0.000 {locals}
        2    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
        2    0.000    0.000    0.000    0.000 {sys._getframe}
        2    0.000    0.000    0.000    0.000 sre_compile.py:361(_compile_info)
        2    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x10017ff20}
        2    0.000    0.000    0.000    0.000 sre_parse.py:379(_parse)
        2    0.000    0.000    0.000    0.000 sre_parse.py:178(__init__)
        2    0.000    0.000    0.000    0.000 {time.time}
        2    0.000    0.000    0.000    0.000 {dir}
        2    0.000    0.000    0.001    0.000 sre_compile.py:495(compile)
        2    0.000    0.000    0.000    0.000 {_sre.compile}
        2    0.000    0.000    0.001    0.000 re.py:188(compile)
        2    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 suite.py:56(addTests)
      2/1    0.000    0.000   17.887   17.887 suite.py:69(__call__)
      2/1    0.000    0.000   17.887   17.887 suite.py:88(run)
        2    0.000    0.000    0.000    0.000 sre_compile.py:480(_code)
        2    0.000    0.000    0.001    0.000 re.py:226(_compile)
        2    0.002    0.001    0.004    0.002 collections.py:237(namedtuple)
        2    0.000    0.000    0.000    0.000 result.py:144(wasSuccessful)
        2    0.000    0.000    0.000    0.000 suite.py:200(_handleModuleTearDown)
        2    0.000    0.000    0.000    0.000 sre_parse.py:301(_parse_sub)
        2    0.000    0.000    0.000    0.000 {repr}
        2    0.000    0.000    0.000    0.000 sre_parse.py:663(parse)
        1    0.000    0.000    0.000    0.000 difflib.py:46(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 sequential.py:8(SR)
        1    0.000    0.000    0.000    0.000 sequential.py:52(SingleRegister)
        1    0.000    0.000    0.000    0.000 test_sequential.py:79(test_FF)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.146    0.146 test_sequential.py:297(test_PC)
        1    0.000    0.000    0.000    0.000 case.py:44(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 case.py:241(tearDownClass)
        1    0.000    0.000    0.000    0.000 sequential.py:41(DFF)
        1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 result.py:40(__init__)
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        1    0.000    0.000    0.000    0.000 functools.py:82(K)
        1    0.000    0.000    0.000    0.000 result.py:105(stopTestRun)
        1    0.000    0.000    0.000    0.000 bit.py:1(Bit)
        1    0.000    0.000    0.000    0.000 case.py:33(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 getopt.py:51(getopt)
        1    0.000    0.000    0.000    0.000 weakref.py:261(__setitem__)
        1    0.001    0.001    0.002    0.002 heapq.py:31(<module>)
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.004    0.004 difflib.py:29(<module>)
        1    0.000    0.000   17.887   17.887 runner.py:140(run)
        1    0.001    0.001    0.002    0.002 main.py:111(parseArgs)
        1    0.002    0.002    0.007    0.007 result.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
        1    0.000    0.000    0.000    0.000 difflib.py:1672(HtmlDiff)
        1    0.000    0.000    0.000    0.000 sequential.py:125(PC)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
        1    0.000    0.000    0.214    0.214 test_sequential.py:159(test_RAM8)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 case.py:24(SkipTest)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 case.py:132(TestCase)
        1    0.000    0.000    0.000    0.000 sequential.py:102(RAM64)
        1    0.002    0.002    0.004    0.004 collections.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:137(_makeResult)
        1    0.000    0.000    0.000    0.000 sequential.py:135(__init__)
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        1    0.000    0.000    0.000    0.000 sequential.py:26(FF)
        1    0.000    0.000    0.000    0.000 sequential.py:65(Register)
        1    0.000    0.000    0.000    0.000 runner.py:36(__init__)
        1    0.000    0.000    0.000    0.000 multi.py:6(Multi)
        1    0.000    0.000    0.000    0.000 sequential.py:93(RAM8)
        1    0.000    0.000    0.000    0.000 signals.py:28(registerResult)
        1    0.000    0.000    0.000    0.000 case.py:1014(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 sequential.py:114(RAM16K)
        1    0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
        1    0.002    0.002    0.002    0.002 runner.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {filter}
        1    0.000    0.000    0.000    0.000 test_sequential.py:61(TestLogic)
        1    0.000    0.000    0.000    0.000 case.py:237(setUpClass)
        1    0.000    0.000    0.000    0.000 sequential.py:110(RAM4K)
        1    0.000    0.000    0.000    0.000 functools.py:80(cmp_to_key)
        1    0.000    0.000    0.000    0.000 loader.py:131(getTestCaseNames)
        1    0.000    0.000    0.022    0.022 test_sequential.py:138(test_Register)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        1    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        1    0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
        1    0.000    0.000    0.000    0.000 bit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:105(printErrors)
        1    0.000    0.000    0.000    0.000 test_sequential.py:63(test_sr)
        1    0.000    0.000   15.547   15.547 test_sequential.py:211(test_RAM512)
        1    0.001    0.001    0.001    0.001 multi.py:1(<module>)
        1    0.001    0.001    0.001    0.001 ALU.py:1(<module>)
        1    0.000    0.000    0.002    0.002 main.py:1(<module>)
        1    0.001    0.001    0.005    0.005 util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 getopt.py:15(<module>)
        1    0.000    0.000    0.001    0.001 loader.py:48(loadTestsFromTestCase)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
        1    0.000    0.000    0.001    0.001 loader.py:59(loadTestsFromModule)
        1    0.000    0.000    0.000    0.000 pprint.py:81(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.001    0.001    0.001    0.001 pprint.py:35(<module>)
        1    0.000    0.000    0.001    0.001 test_sequential.py:113(test_SingleRegister)
        1    0.000    0.000    0.000    0.000 keyword.py:11(<module>)
        1    0.000    0.000    0.000    0.000 sequential.py:76(RAM)
        1    0.000    0.000    0.000    0.000 collections.py:25(OrderedDict)
        1    0.000    0.000    0.000    0.000 sequential.py:106(RAM512)
        1    0.000    0.000    1.929    1.929 test_sequential.py:184(test_RAM64)
        1    0.000    0.000    0.000    0.000 result.py:73(startTestRun)
        1    0.002    0.002    0.023    0.023 __init__.py:45(<module>)
        1    0.000    0.000    0.000    0.000 posixpath.py:110(basename)
        1    0.000    0.000    0.000    0.000 runner.py:14(__init__)
        1    0.000    0.000   17.887   17.887 main.py:213(runTests)
        1    0.005    0.005    0.010    0.010 case.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {sys.exit}
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000   17.899   17.899 main.py:72(__init__)
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.001    0.001 test_sequential.py:95(test_DFF)
        1    0.000    0.000    0.000    0.000 getopt.py:38(GetoptError)
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
        1    0.001    0.001    0.001    0.001 bisect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 collections.py:356(Counter)
        1    0.000    0.000    0.001    0.001 test_sequential.py:1(<module>)
        1    0.001    0.001    0.001    0.001 loader.py:1(<module>)
        1    0.008    0.008    0.010    0.010 {__import__}
        1    0.000    0.000    0.000    0.000 sequential.py:1(<module>)
        1    0.000    0.000    0.001    0.001 main.py:153(createTests)
        1    0.000    0.000    0.000    0.000 difflib.py:766(Differ)
        1    0.000    0.000    0.000    0.000 runner.py:127(__init__)
        1    0.000    0.000    0.000    0.000 weakref.py:243(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 case.py:97(_AssertRaisesContext)


