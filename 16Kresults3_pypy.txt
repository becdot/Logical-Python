# Optimized Bit.mux, variable useage in test_sequential (fewer from_num() calls)

         400061303 function calls (398201908 primitive calls) in 50.832 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1852771    5.706    0.000   32.783    0.000 multi.py:9(__init__)
197908442    5.065    0.000    5.065    0.000 bit.py:52(nand)
  8488084    4.479    0.000   18.932    0.000 sequential.py:57(__call__)
   530504    4.213    0.000   26.726    0.000 sequential.py:69(__call__)
  8488094    3.495    0.000    9.901    0.000 sequential.py:44(__call__)
   530422    3.259    0.000   12.346    0.000 multi.py:60(multimux)
 35015655    3.164    0.000    4.861    0.000 bit.py:30(__and__)
 16974836    2.444    0.000    8.920    0.000 bit.py:56(mux)
 16976196    1.882    0.000    5.947    0.000 sequential.py:33(__call__)
 16976203    1.861    0.000    3.254    0.000 sequential.py:16(__call__)
  9018568    1.627    0.000   20.558    0.000 sequential.py:70(<genexpr>)
5824670/4437166    1.478    0.000    2.081    0.000 {len}
306864/79276    1.409    0.000   14.138    0.000 multi.py:75(reduce_winner)
    37450    1.392    0.000    1.641    0.000 sequential.py:67(__init__)
  9017174    1.128    0.000    5.495    0.000 multi.py:63(<genexpr>)
  2152976    1.125    0.000    1.678    0.000 multi.py:13(__len__)
 26013262    1.069    0.000    2.225    0.000 bit.py:35(__invert__)
306864/79276    0.979    0.000    1.860    0.000 multi.py:93(expand_winner)
    67652    0.939    0.000   44.449    0.001 sequential.py:94(__call__)
 20360636    0.646    0.000    0.646    0.000 multi.py:19(__iter__)
11602/242    0.613    0.000   47.899    0.198 sequential.py:83(__call__)
    79276    0.474    0.000   15.133    0.000 multi.py:69(multimux_multiway)
   530528    0.403    0.000    1.429    0.000 multi.py:107(pad_multi)
   5349/5    0.337    0.000    1.982    0.396 sequential.py:78(__init__)
 16974881    0.294    0.000    0.294    0.000 bit.py:26(__nonzero__)
   458248    0.217    0.000    0.217    0.000 {math.log}
      660    0.213    0.000    0.429    0.001 ALU.py:12(full_adder)
    79276    0.171    0.000    2.127    0.000 multi.py:88(dmux_multiway)
   530356    0.132    0.000    0.450    0.000 bit.py:62(dmux)
  1198405    0.072    0.000    0.107    0.000 sequential.py:31(__init__)
   782990    0.065    0.000    0.065    0.000 multi.py:29(__getitem__)
   599202    0.064    0.000    0.171    0.000 sequential.py:41(__init__)
   599201    0.055    0.000    0.227    0.000 sequential.py:54(__init__)
   122223    0.051    0.000    0.051    0.000 {range}
     2662    0.042    0.000    0.133    0.000 bit.py:43(__xor__)
  1198406    0.035    0.000    0.035    0.000 sequential.py:13(__init__)
        1    0.033    0.033    0.090    0.090 {__import__}
      522    0.028    0.000    0.049    0.000 multi.py:36(to_decimal)
     3344    0.022    0.000    0.022    0.000 bit.py:12(__init__)
      298    0.017    0.000    0.033    0.000 {method 'join' of 'str' objects}
     4004    0.016    0.000    0.050    0.000 bit.py:39(__or__)
     5740    0.013    0.000    0.017    0.000 multi.py:43(<genexpr>)
     5032    0.013    0.000    0.015    0.000 multi.py:17(<genexpr>)
     2002    0.010    0.000    0.135    0.000 ALU.py:6(half_adder)
     3344    0.010    0.000    0.010    0.000 bit.py:7(__new__)
        2    0.009    0.004    0.009    0.005 collections.py:237(namedtuple)
       22    0.006    0.000   41.710    1.896 sequential.py:114(__call__)
       62    0.005    0.000    0.105    0.002 multi.py:126(pad_to_digits)
       22    0.004    0.000    0.446    0.020 ALU.py:22(add_multi)
      296    0.004    0.000    0.037    0.000 multi.py:16(__str__)
     5218    0.003    0.000    0.003    0.000 bit.py:23(__mul__)
        1    0.003    0.003    0.022    0.022 __init__.py:1(<module>)
     4736    0.003    0.000    0.003    0.000 bit.py:17(__repr__)
     1054    0.003    0.000    0.006    0.000 multi.py:131(<genexpr>)
        1    0.003    0.003    0.009    0.009 case.py:1(<module>)
      148    0.002    0.000    0.003    0.000 case.py:473(_getAssertEqualityFunc)
        1    0.001    0.001    0.007    0.007 result.py:1(<module>)
       19    0.001    0.000    0.001    0.000 {method 'write' of 'file' objects}
      148    0.001    0.000    0.004    0.000 case.py:504(assertEqual)
      529    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
      374    0.001    0.000    0.001    0.000 sequential.py:143(<genexpr>)
      544    0.001    0.000    0.001    0.000 {reversed}
        1    0.001    0.001    0.001    0.001 runner.py:1(<module>)
        1    0.001    0.001    0.003    0.003 main.py:111(parseArgs)
      460    0.001    0.000    0.001    0.000 {method 'insert' of 'list' objects}
        1    0.001    0.001    5.201    5.201 test_sequential.py:248(test_RAM4K)
      434    0.001    0.000    0.001    0.000 bit.py:20(__int__)
        1    0.001    0.001    0.228    0.228 test_sequential.py:193(test_RAM64)
        2    0.001    0.000    0.002    0.001 sre_parse.py:301(_parse_sub)
       22    0.001    0.000    0.680    0.031 sequential.py:135(__call__)
        1    0.001    0.001    1.005    1.005 test_sequential.py:220(test_RAM512)
      157    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
        1    0.001    0.001   43.509   43.509 test_sequential.py:277(test_RAM16K)
      250    0.000    0.000    0.000    0.000 {getattr}
        1    0.000    0.000    0.002    0.002 loader.py:1(<module>)
        1    0.000    0.000    0.057    0.057 test_sequential.py:1(<module>)
       99    0.000    0.000    0.001    0.000 loader.py:134(isTestMethod)
        1    0.000    0.000    0.000    0.000 sequential.py:1(<module>)
        1    0.000    0.000    0.001    0.001 main.py:1(<module>)
        1    0.000    0.000    0.688    0.688 test_sequential.py:305(test_PC)
       22    0.000    0.000    0.510    0.023 ALU.py:36(inc)
        1    0.000    0.000    0.001    0.001 loader.py:131(getTestCaseNames)
        9    0.000    0.000    0.022    0.002 test_sequential.py:8(from_num)
      2/1    0.000    0.000   50.700   50.700 suite.py:88(run)
        1    0.000    0.000    0.057    0.057 test_sequential.py:168(test_RAM8)
        2    0.000    0.000    0.001    0.000 sre_parse.py:379(_parse)
       11    0.000    0.000   50.699    4.609 case.py:293(run)
     10/6    0.000    0.000    0.000    0.000 sre_parse.py:140(getwidth)
       11    0.000    0.000    0.001    0.000 runner.py:57(addSuccess)
       88    0.000    0.000    0.001    0.000 test_sequential.py:12(<genexpr>)
       40    0.000    0.000    0.000    0.000 {max}
       52    0.000    0.000    0.000    0.000 {min}
      148    0.000    0.000    0.000    0.000 case.py:497(_baseAssertEqual)
        1    0.000    0.000    0.002    0.002 loader.py:59(loadTestsFromModule)
        1    0.000    0.000    0.008    0.008 test_sequential.py:147(test_Register)
      6/2    0.000    0.000    0.001    0.000 sre_compile.py:32(_compile)
       12    0.000    0.000    0.000    0.000 suite.py:290(_isnotsuite)
      119    0.000    0.000    0.000    0.000 {isinstance}
       30    0.000    0.000    0.000    0.000 runner.py:17(__getattr__)
       25    0.000    0.000    0.000    0.000 sre_parse.py:182(__next)
       46    0.000    0.000    0.000    0.000 collections.py:277(<genexpr>)
        1    0.000    0.000   50.703   50.703 runner.py:140(run)
        4    0.000    0.000    0.000    0.000 sre_compile.py:207(_optimize_charset)
       11    0.000    0.000    0.000    0.000 case.py:180(__init__)
        4    0.000    0.000    0.000    0.000 sre_parse.py:257(_escape)
      105    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.006    0.006 difflib.py:3(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
        1    0.000    0.000    0.000    0.000 pprint.py:11(<module>)
       40    0.000    0.000    0.018    0.000 multi.py:23(__eq__)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
        1    0.000    0.000    0.000    0.000 signals.py:1(<module>)
       38    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000   50.703   50.703 main.py:213(runTests)
       24    0.000    0.000    0.000    0.000 sre_parse.py:130(__getitem__)
       18    0.000    0.000    0.000    0.000 multi.py:32(insert)
       11    0.000    0.000   50.700    4.609 case.py:390(__call__)
        1    0.000    0.000    0.000    0.000 bit.py:1(<module>)
        1    0.000    0.000    0.000    0.000 functools.py:80(cmp_to_key)
       12    0.000    0.000    0.000    0.000 suite.py:225(_tearDownPreviousClass)
        1    0.000    0.000   50.796   50.796 main.py:72(__init__)
        1    0.000    0.000    0.001    0.001 loader.py:48(loadTestsFromTestCase)
        2    0.000    0.000    0.003    0.001 re.py:228(_compile)
       11    0.000    0.000    0.000    0.000 result.py:79(stopTest)
       18    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        1    0.000    0.000    0.001    0.001 test_sequential.py:122(test_SingleRegister)
        2    0.000    0.000    0.003    0.001 sre_compile.py:495(compile)
       11    0.000    0.000    0.000    0.000 result.py:59(startTest)
       11    0.000    0.000    0.000    0.000 runner.py:50(startTest)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
       17    0.000    0.000    0.000    0.000 test_sequential.py:26(<genexpr>)
        4    0.000    0.000    0.000    0.000 sre_compile.py:178(_compile_charset)
        1    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       12    0.000    0.000    0.000    0.000 suite.py:46(addTest)
    15/14    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
       66    0.000    0.000    0.000    0.000 case.py:206(addTypeEqualityFunc)
       11    0.000    0.000    0.000    0.000 suite.py:165(_handleModuleFixture)
       17    0.000    0.000    0.000    0.000 test_sequential.py:25(<genexpr>)
       22    0.000    0.000    0.000    0.000 sre_parse.py:201(get)
       11    0.000    0.000    0.000    0.000 suite.py:125(_handleClassSetUp)
       17    0.000    0.000    0.000    0.000 test_sequential.py:27(<genexpr>)
       13    0.000    0.000    0.000    0.000 suite.py:157(_get_previous_module)
       17    0.000    0.000    0.000    0.000 test_sequential.py:28(<genexpr>)
       17    0.000    0.000    0.000    0.000 test_sequential.py:29(<genexpr>)
       15    0.000    0.000    0.000    0.000 test_sequential.py:54(<genexpr>)
        1    0.000    0.000    0.000    0.000 case.py:132(TestCase)
        1    0.000    0.000    0.000    0.000 multi.py:1(<module>)
        2    0.000    0.000    0.002    0.001 sre_parse.py:663(parse)
       10    0.000    0.000    0.000    0.000 sre_parse.py:138(append)
       15    0.000    0.000    0.000    0.000 test_sequential.py:65(<genexpr>)
       15    0.000    0.000    0.000    0.000 test_sequential.py:61(<genexpr>)
        1    0.000    0.000    0.000    0.000 getopt.py:1(<module>)
       11    0.000    0.000    0.000    0.000 case.py:374(doCleanups)
        3    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
       11    0.000    0.000    0.000    0.000 functools.py:84(__init__)
        3    0.000    0.000    0.000    0.000 _functools.py:19(__call__)
       13    0.000    0.000    0.000    0.000 test_sequential.py:60(<genexpr>)
       13    0.000    0.000    0.000    0.000 test_sequential.py:63(<genexpr>)
       24    0.000    0.000    0.000    0.000 {hasattr}
       13    0.000    0.000    0.000    0.000 test_sequential.py:53(<genexpr>)
        8    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
       11    0.000    0.000    0.000    0.000 {method 'flush' of 'file' objects}
        1    0.000    0.000    0.000    0.000 sequential.py:103(RAM512)
        1    0.000    0.000    0.005    0.005 util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 StringIO.py:1(<module>)
        1    0.000    0.000    0.000    0.000 weakref.py:261(__setitem__)
       25    0.000    0.000    0.000    0.000 case.py:410(assertFalse)
       16    0.000    0.000    0.000    0.000 sre_parse.py:126(__len__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:178(__init__)
       10    0.000    0.000    0.000    0.000 test_sequential.py:52(<genexpr>)
        8    0.000    0.000    0.000    0.000 collections.py:294(<genexpr>)
       10    0.000    0.000    0.000    0.000 test_sequential.py:58(<genexpr>)
        2    0.000    0.000    0.000    0.000 sre_compile.py:361(_compile_info)
       10    0.000    0.000    0.000    0.000 test_sequential.py:56(<genexpr>)
        6    0.000    0.000    0.000    0.000 sre_parse.py:90(__init__)
        4    0.000    0.000    0.000    0.000 sre_compile.py:354(_simple)
       10    0.000    0.000    0.000    0.000 test_sequential.py:42(<genexpr>)
        1    0.000    0.000    0.000    0.000 test_sequential.py:104(test_DFF)
        4    0.000    0.000    0.000    0.000 runner.py:22(writeln)
       20    0.000    0.000    0.000    0.000 case.py:416(assertTrue)
        9    0.000    0.000    0.000    0.000 sre_parse.py:195(match)
        1    0.000    0.000    0.000    0.000 test_sequential.py:72(test_sr)
        4    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        2    0.000    0.000    0.000    0.000 suite.py:56(addTests)
       13    0.000    0.000    0.000    0.000 result.py:84(_restoreStdout)
        3    0.000    0.000    0.000    0.000 _functools.py:12(__init__)
        1    0.000    0.000    0.000    0.000 result.py:40(__init__)
        2    0.000    0.000    0.001    0.000 sre_compile.py:480(_code)
        1    0.000    0.000    0.000    0.000 weakref.py:243(__init__)
        1    0.000    0.000    0.000    0.000 test_sequential.py:88(test_FF)
        4    0.000    0.000    0.000    0.000 sre_compile.py:474(isstring)
        2    0.000    0.000    0.000    0.000 {time.time}
        3    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        1    0.000    0.000    0.000    0.000 traceback.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:36(__init__)
        2    0.000    0.000    0.000    0.000 {repr}
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
       13    0.000    0.000    0.000    0.000 result.py:65(_setupStdout)
       10    0.000    0.000    0.000    0.000 functools.py:86(__lt__)
        6    0.000    0.000    0.000    0.000 sre_compile.py:51(fixup)
        8    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 sequential.py:132(__init__)
       10    0.000    0.000    0.000    0.000 {cmp}
        1    0.000    0.000    0.000    0.000 ALU.py:1(<module>)
        2    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
        2    0.000    0.000    0.002    0.001 result.py:144(wasSuccessful)
       17    0.000    0.000    0.000    0.000 sequential.py:134(<genexpr>)
        2    0.000    0.000    0.000    0.000 {method '__new__' of 'type' objects}
       16    0.000    0.000    0.000    0.000 {issubclass}
        1    0.000    0.000    0.000    0.000 difflib.py:1672(HtmlDiff)
        3    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        2    0.000    0.000    0.000    0.000 suite.py:200(_handleModuleTearDown)
        1    0.000    0.000    0.000    0.000 fnmatch.py:1(<module>)
       11    0.000    0.000    0.000    0.000 case.py:229(setUp)
        1    0.000    0.000    0.000    0.000 runner.py:105(printErrors)
        1    0.000    0.000    0.000    0.000 bit.py:1(Bit)
        1    0.000    0.000    0.000    0.000 getopt.py:51(getopt)
        3    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {locals}
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        1    0.000    0.000    0.002    0.002 main.py:153(createTests)
        4    0.000    0.000    0.000    0.000 suite.py:11(_call_if_exists)
        2    0.000    0.000    0.000    0.000 {sys._getframe}
        1    0.000    0.000    0.000    0.000 signals.py:28(registerResult)
       11    0.000    0.000    0.000    0.000 result.py:126(addSuccess)
        2    0.000    0.000    0.003    0.001 re.py:188(compile)
      2/1    0.000    0.000   50.700   50.700 suite.py:69(__call__)
        9    0.000    0.000    0.000    0.000 {setattr}
        9    0.000    0.000    0.000    0.000 {_sre.getlower}
        2    0.000    0.000    0.000    0.000 suite.py:19(__init__)
        1    0.000    0.000    0.000    0.000 runner.py:127(__init__)
        1    0.000    0.000    0.000    0.000 test_sequential.py:70(TestLogic)
        1    0.000    0.000    0.000    0.000 posixpath.py:110(basename)
        1    0.000    0.000    0.000    0.000 difflib.py:46(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 functools.py:82(K)
        2    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       11    0.000    0.000    0.000    0.000 case.py:233(tearDown)
        7    0.000    0.000    0.000    0.000 {ord}
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        1    0.000    0.000    0.000    0.000 runner.py:137(_makeResult)
        7    0.000    0.000    0.000    0.000 case.py:603(_deprecate)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
        1    0.000    0.000    0.000    0.000 case.py:1012(FunctionTestCase)
        3    0.000    0.000    0.000    0.000 suite.py:37(__iter__)
        1    0.000    0.000    0.000    0.000 multi.py:6(Multi)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        1    0.000    0.000    0.000    0.000 sequential.py:5(SR)
        4    0.000    0.000    0.000    0.000 sre_parse.py:134(__setitem__)
        1    0.000    0.000    0.000    0.000 pprint.py:81(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.000    0.000    0.000    0.000 difflib.py:766(Differ)
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 getopt.py:38(GetoptError)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        3    0.000    0.000    0.000    0.000 {callable}
        1    0.000    0.000    0.000    0.000 case.py:97(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 sequential.py:107(RAM4K)
        2    0.000    0.000    0.000    0.000 runner.py:111(printErrorList)
        1    0.000    0.000    0.000    0.000 sequential.py:111(RAM16K)
        1    0.000    0.000    0.000    0.000 sequential.py:73(RAM)
        1    0.000    0.000    0.000    0.000 runner.py:14(__init__)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.000    0.000 sequential.py:122(PC)
        1    0.000    0.000    0.000    0.000 sequential.py:62(Register)
        1    0.000    0.000    0.000    0.000 sequential.py:38(DFF)
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 sequential.py:90(RAM8)
        1    0.000    0.000    0.000    0.000 sequential.py:49(SingleRegister)
        1    0.000    0.000    0.000    0.000 sequential.py:23(FF)
        1    0.000    0.000    0.000    0.000 case.py:33(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 sequential.py:99(RAM64)
        1    0.000    0.000    0.000    0.000 case.py:24(SkipTest)
        1    0.000    0.000    0.000    0.000 case.py:44(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 result.py:73(startTestRun)
        1    0.000    0.000    0.000    0.000 result.py:105(stopTestRun)
        1    0.000    0.000    0.000    0.000 case.py:241(tearDownClass)
        1    0.000    0.000    0.000    0.000 case.py:237(setUpClass)


